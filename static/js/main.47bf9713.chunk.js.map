{"version":3,"sources":["components/ContactForm/ContactForm.module.css","components/Filter/Filter.module.css","components/ContactListItem/ContactListItem.module.css","components/ContactList/ContactList.module.css","components/Container/Container.module.css","components/Container/Container.jsx","components/ContactForm/ContactForm.jsx","components/Filter/Filter.jsx","components/ContactListItem/ContactListItem.jsx","components/ContactList/ContactList.jsx","components/App/App.jsx","index.js"],"names":["module","exports","Container","children","className","s","container","ContactForm","state","name","number","handleChange","event","currentTarget","value","setState","handleSubmit","preventDefault","props","onSubmit","resetForm","form","this","label","input","type","pattern","title","required","onChange","formButton","require","Component","Filter","filterWrapper","ContactListItem","id","onDeleteContact","text","itemButton","onClick","ContactList","contacts","list","map","listItem","App","initialState","filter","formSubmitHandler","data","some","alert","newContact","nanoid","deleteContact","contactId","prevState","contact","changeFilter","getVisibleContacts","lowerCaseFilter","toLowerCase","includes","localStorageContacts","localStorage","getItem","JSON","parse","prevProps","setItem","stringify","visibleContacts","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.47bf9713.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"form\":\"ContactForm_form__3Ba5Q\",\"label\":\"ContactForm_label__34gV3\",\"input\":\"ContactForm_input__183-u\",\"formButton\":\"ContactForm_formButton__1bCi7\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"filterWrapper\":\"Filter_filterWrapper__EAW07\",\"label\":\"Filter_label__tx-2t\",\"input\":\"Filter_input__Pz9Zj\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"text\":\"ContactListItem_text__1X4Ij\",\"itemButton\":\"ContactListItem_itemButton__-EXA4\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"list\":\"ContactList_list__12Whb\",\"listItem\":\"ContactList_listItem__sqlyS\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Container_container__1JkTQ\"};","import s from './Container.module.css';\r\n\r\nexport default function Container({ children }) {\r\n  return <div className={s.container}>{children}</div>;\r\n}\r\n","import s from './ContactForm.module.css';\r\n\r\nconst { Component } = require('react');\r\n\r\nexport default class ContactForm extends Component {\r\n  state = {\r\n    name: '',\r\n    number: '',\r\n  };\r\n\r\n  handleChange = event => {\r\n    const { name, value } = event.currentTarget;\r\n    this.setState({ [name]: value });\r\n  };\r\n\r\n  handleSubmit = event => {\r\n    event.preventDefault();\r\n    this.props.onSubmit(this.state);\r\n    this.resetForm();\r\n  };\r\n\r\n  resetForm = () => {\r\n    this.setState({ name: '', number: '' });\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <form className={s.form} onSubmit={this.handleSubmit}>\r\n        <label className={s.label}>\r\n          Name\r\n          <input\r\n            className={s.input}\r\n            type=\"text\"\r\n            name=\"name\"\r\n            value={this.state.name}\r\n            pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\r\n            title=\"Name may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan\"\r\n            required\r\n            onChange={this.handleChange}\r\n          />\r\n        </label>\r\n        <label className={s.label}>\r\n          Number\r\n          <input\r\n            className={s.input}\r\n            type=\"tel\"\r\n            name=\"number\"\r\n            value={this.state.number}\r\n            pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\r\n            title=\"Phone number must be digits and can contain spaces, dashes, parentheses and can start with +\"\r\n            required\r\n            onChange={this.handleChange}\r\n          />\r\n        </label>\r\n\r\n        <button className={s.formButton} type=\"submit\">\r\n          Add contact\r\n        </button>\r\n      </form>\r\n    );\r\n  }\r\n}\r\n","import s from './Filter.module.css';\r\n\r\nexport default function Filter({ value, onChange }) {\r\n  return (\r\n    <div className={s.filterWrapper}>\r\n      <label className={s.label}>\r\n        Find contacts by name\r\n        <input\r\n          className={s.input}\r\n          type=\"text\"\r\n          value={value}\r\n          onChange={onChange}\r\n        />\r\n      </label>\r\n    </div>\r\n  );\r\n}\r\n","import PropTypes from 'prop-types';\r\nimport s from './ContactListItem.module.css';\r\n\r\nexport default function ContactListItem({ name, number, id, onDeleteContact }) {\r\n  return (\r\n    <>\r\n      <p className={s.text}>\r\n        {name}: {number}\r\n      </p>\r\n      <button\r\n        className={s.itemButton}\r\n        type=\"button\"\r\n        onClick={() => onDeleteContact(id)}\r\n      >\r\n        delete\r\n      </button>\r\n    </>\r\n  );\r\n}\r\n\r\nContactListItem.propTypes = {\r\n  name: PropTypes.string.isRequired,\r\n  number: PropTypes.string.isRequired,\r\n};\r\n","import PropTypes from 'prop-types';\r\nimport ContactListItem from 'components/ContactListItem';\r\nimport s from './ContactList.module.css';\r\n\r\nexport default function ContactList({ contacts, onDeleteContact }) {\r\n  return (\r\n    <ul className={s.list}>\r\n      {contacts.map(({ id, name, number }) => (\r\n        <li className={s.listItem} key={id}>\r\n          <ContactListItem\r\n            name={name}\r\n            number={number}\r\n            id={id}\r\n            onDeleteContact={onDeleteContact}\r\n          />\r\n        </li>\r\n      ))}\r\n    </ul>\r\n  );\r\n}\r\n\r\nContactList.propTypes = {\r\n  name: PropTypes.string,\r\n  number: PropTypes.number,\r\n};\r\n","import React, { Component } from 'react';\r\nimport { nanoid } from 'nanoid';\r\n\r\nimport initialState from '../../data/contacts.json';\r\nimport Container from '../Container/Container';\r\nimport ContactForm from 'components/ContactForm';\r\nimport Filter from 'components/Filter';\r\nimport ContactList from 'components/ContactList';\r\n\r\nexport default class App extends Component {\r\n  state = {\r\n    contacts: initialState,\r\n    filter: '',\r\n  };\r\n\r\n  #localStorageKey = 'contacts';\r\n\r\n  componentDidMount() {\r\n    const localStorageContacts = localStorage.getItem(this.#localStorageKey);\r\n    const contacts = JSON.parse(localStorageContacts);\r\n\r\n    if (contacts) {\r\n      this.setState({ contacts });\r\n    }\r\n  }\r\n\r\n  componentDidUpdate(prevProps, prevState) {\r\n    const { contacts } = this.state;\r\n\r\n    if (contacts !== prevState.contacts) {\r\n      localStorage.setItem('contacts', JSON.stringify(contacts));\r\n    }\r\n  }\r\n\r\n  formSubmitHandler = data => {\r\n    const { contacts } = this.state;\r\n\r\n    if (contacts.some(({ name }) => name === data.name)) {\r\n      alert(`${data.name} is already in contacts!`);\r\n      return;\r\n    } else if (contacts.some(({ number }) => number === data.number)) {\r\n      alert(`${data.number} is already in contacts!`);\r\n      return;\r\n    }\r\n\r\n    const { name, number } = data;\r\n\r\n    const newContact = {\r\n      id: nanoid(),\r\n      name,\r\n      number,\r\n    };\r\n\r\n    this.setState(({ contacts }) => ({\r\n      contacts: [newContact, ...contacts],\r\n    }));\r\n  };\r\n\r\n  deleteContact = contactId => {\r\n    this.setState(prevState => ({\r\n      contacts: prevState.contacts.filter(contact => contact.id !== contactId),\r\n    }));\r\n  };\r\n\r\n  changeFilter = event => {\r\n    this.setState({ filter: event.currentTarget.value });\r\n  };\r\n\r\n  getVisibleContacts = () => {\r\n    const { contacts, filter } = this.state;\r\n    const lowerCaseFilter = filter.toLowerCase();\r\n\r\n    return contacts.filter(contact =>\r\n      contact.name.toLowerCase().includes(lowerCaseFilter),\r\n    );\r\n  };\r\n\r\n  render() {\r\n    const { filter } = this.state;\r\n    const visibleContacts = this.getVisibleContacts();\r\n    return (\r\n      <Container>\r\n        <h1>Phonebook</h1>\r\n        <ContactForm onSubmit={this.formSubmitHandler} />\r\n        <h2>Contacts</h2>\r\n        <Filter value={filter} onChange={this.changeFilter} />\r\n        <ContactList\r\n          contacts={visibleContacts}\r\n          onDeleteContact={this.deleteContact}\r\n        />\r\n      </Container>\r\n    );\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport App from './components/App/App.jsx';\r\nimport 'modern-normalize';\r\nimport './index.css';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root'),\r\n);\r\n"],"sourceRoot":""}